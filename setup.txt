REPLACEMENT: REMOVE NEXT AND USE VITE

> cd .\acf
> npm create vite@latest acf -- --template react-ts
- In 'web\.eslintrc.cjs' edit:
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    project: ['./tsconfig.json', './tsconfig.node.json'],
    tsconfigRootDir: __dirname,
  },
- Replace `plugin:@typescript-eslint/recommended`
  to `plugin:@typescript-eslint/strict-type-checked`
- Add `plugin:@typescript-eslint/stylistic-type-checked`
- Install [eslint-plugin-react](https://github.com/jsx-eslint/eslint-plugin-react)
  and add `plugin:react/recommended` & `plugin:react/jsx-runtime`
> npm install eslint eslint-plugin-react --save-dev
- change 'src' to 'app' in vite code
- Install dependencies (like chroma, needs to make a list)
> npm i jest --save-dev
> npm i ts-jest @types/jest --save-dev
> npm i @testing-library/jest-dom @testing-library/react @testing-library/user-event --save-dev
> npm install ts-node @testing-library/jest-dom --save-dev
> npm install jest-environment-jsdom
> npm install identity-obj-proxy --save-dev
> npm audit fix

============================================================
POTENTIALLY OBSOLETE:

REINSTALLATION FROM GITHUB

- clone repository git@github.com:contactomorph/acf.git
- go inside "acf" folder and remove the "web" folder (we will restore it after).
> npx create-next-app@latest web
    √ Would you like to use TypeScript with this project? ... Yes
    √ Would you like to use ESLint with this project? ... No
    √ Would you like to use Tailwind CSS with this project? ... No
    √ Would you like to use `src/` directory with this project? ... No
    √ Use App Router (recommended)? ... Yes
    √ Would you like to customize the default import alias? ... No
- clean all modifications inside the git repository so that we restore sources
  and only the "next" files ignored by git remain as such.

- check that next.config.js contains the following option to be sure a single out folder on build
    const nextConfig = {
        output: 'export',
    }

- go to "acf" root, download "firebase-tool-instant-win.exe" and add to .gitignore if missing.

- in firebase-tool-instant-win.exe run > firebase init
    (*) Hosting: Configure files for Firebase Hosting and (optionally) set up GitHub Action deploys
    > Use an existing project
      acf-allure
    ? What do you want to use as your public directory? out
    ? Configure as a single-page app (rewrite all urls to /index.html)? Yes
    ? Set up automatic builds and deploys with GitHub? No
    ? File out/index.html already exists. Overwrite? No
- add ".firebase" to .gitignore

RUN IN PRODUCTION

> npm run build
! Results are stored in .next folder.

INSTALL JEST

> cd web
> npm install --save-dev jest jest-environment-jsdom @testing-library/react @testing-library/jest-dom
- create file 'jest.config.mjs' as specified
  in https://nextjs.org/docs/pages/building-your-application/optimizing/testing
> npm install @testing-library/user-event@14

